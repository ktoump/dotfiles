#
# Section scheme inspired from alexbooker
# https://github.com/alexbooker/dotfiles
#
# Sections:
#	-> Constants
#	-> General Configuration
#	-> Window Bindings
#	-> Workspace Bindings
#	-> Startup Programs
#	-> Program Bindings
#		* Restart-Related Bindings
#		* Volume & Media Bindings
#	-> Program-to-Workspaces Assignments
#		* Floating/Tabbed
#	-> Colors (see constants for specific vals)
#	-> "Specialized" code: Complex optional additions that don't fit above.
#		#1: MPD control.
#		#2: System halter
#		#3: Gaps resize
#
# Base16 Solarized by Ethan Schoonover (http://ethanschoonover.com/solarized)
# template by Matt Parnell, @parnmatt

# Constants
set $mod Mod4
set $bgd1 #282828
set $bgd0 #3C3836
set $fgd1 #A89984
set $fgd0 #BDAE93
set $fgl0 #D5C4A1
set $fgl1 #EBDBB2
set $bgl0 #EBDBB2
set $bgl1 #FBF1C7
set $red #FB4934
set $orange #FE8019
set $yellow #FABD2F
set $green #B8BB26
set $cyan #8EC07C
set $blue #83A598
set $pink #D3869B
#set $workspace1 "1:  "
#set $workspace2 "2:  "
#set $workspace3 "3:  "
#set $workspace4 "4:  "
#set $workspace5 "5:  "
#set $workspace6 "6:  "
#set $workspace7 "7:  "
#set $workspace8 "8:  "
#set $workspace9 "9:  "
#set $workspace10 "10:  "
set $workspace1 "1: 1 "
set $workspace2 "2: 2 "
set $workspace3 "3: 3 "
set $workspace4 "4: 4 "
set $workspace5 "5: 5 "
set $workspace6 "6: 6 "
set $workspace7 "7: 7 "
set $workspace8 "8: 8 "
set $workspace9 "9: 9 "
set $workspace10 "10: 10 "

# General Configuration
font pango: Roboto 9
floating_modifier $mod
new_window pixel 5
smart_borders on
workspace_auto_back_and_forth yes
#gaps inner 10

workspace $workspace1 output HDMI-2
workspace $workspace2 output HDMI-2
workspace $workspace3 output HDMI-2
workspace $workspace4 output HDMI-2
workspace $workspace5 output HDMI-2
workspace $workspace6 output VGA-1
workspace $workspace7 output VGA-1
workspace $workspace8 output VGA-1
workspace $workspace9 output VGA-1
workspace $workspace10 output VGA-1


# Window-Related Bindings
bindsym $mod+Shift+q kill
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
bindsym $mod+Ctrl+h move container to output left
bindsym $mod+Ctrl+j move container to output down
bindsym $mod+Ctrl+k move container to output up
bindsym $mod+Ctrl+l move container to output right
bindsym $mod+e layout toggle split
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+v split v
bindsym $mod+b split h
bindsym $mod+Shift+space floating toggle
bindsym $mod+Shift+s sticky toggle
bindsym $mod+space focus mode_toggle
bindsym $mod+f fullscreen toggle
bindsym $mod+u [urgent="latest"] focus
bindsym $mod+r mode "  "
mode "  " {
  bindsym h resize shrink width 10 px or 10 ppt
  bindsym j resize grow height 10 px or 10 ppt
  bindsym k resize shrink height 10 px or 10 ppt
  bindsym l resize grow width 10 px or 10 ppt
  bindsym Control+bracketleft mode "default"
  bindsym Escape mode "default"
}

# Restart-Related Bindings
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart

# Program-Related Bindings
bindsym $mod+Return exec termite
bindsym $mod+d exec rofi -show run -eh 2
bindcode Mod1+65 exec pkill -RTMIN+1 i3blocks
bindsym $mod+p exec pavucontrol
bindsym Print exec scrot; exec notify-send "Screenshot taken"
bindsym $mod+Shift+m exec --no-startup-id pkill -USR1 redshift
bindsym $mod+z exec dolphin
bindsym $mod+Shift+z exec termite -e ranger

# Volume & Media Bindings
bindsym XF86AudioMute exec ponymix toggle && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec ponymix decrease 3 && pkill -RTMIN+1 i3blocks
bindsym XF86AudioRaiseVolume exec ponymix increase 3 && pkill -RTMIN+1 i3blocks
bindsym XF86AudioStop exec mpc stop
bindsym XF86AudioPlay exec mpc toggle
bindsym XF86AudioNext exec mpc next
bindsym XF86AudioPrev exec mpc prev

# Other
#bindsym XF86ScreenSaver exec i3lock-fancy
#bindsym XF86TouchpadToggle exec touchpad_toggle.sh
bindsym $mod+a exec xrandr --output VGA-1 --auto --output HDMI-2 --auto --right-of VGA-1
bindsym $mod+Shift+a exec xrandr --output VGA-1 --off --output HDMI-2 --auto

# Startup Programs
exec --no-startup-id mpd
exec --no-startup-id transmission-daemon
exec --no-startup-id xcape -e 'Control_L=Escape'
exec --no-startup-id xset -dpms s off
exec --no-startup-id unclutter
exec --no-startup-id redshift -l 40.6:22.9 -t 6500:3500
exec --no-startup-id dunst
exec hsetroot -solid "#282828"
exec_always --no-startup-id monitor_toggle.sh
#exec --no-startup-id urxvtd -q -f -o
exec nm-applet
exec compton -f


# Workspace-Related Bindings
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# turn off both monitors on demand
bindsym $mod+Right exec sleep 1 && xset dpms force off

# Program Workspaces
assign [class="qutebrowser"] $workspace2
assign [class="(?i)firefox"] $workspace2
assign [class="VirtualBox"] $workspace4
assign [title="Messenger"] $workspace5
assign [class="Skype"] $workspace5

# Floating
for_window [class="Pavucontrol"] floating enable
for_window [class="mpv"] floating enable
for_window [class="Lxappearance"] floating enable
for_window [class="Simplescreenrecorder"] floating enable
for_window [class="(?i)java"] floating enable
for_window [class="com.*$"] floating enable
for_window [instance="sun-awt-X11-XFramePeer"] floating enable
for_window [class="Octave-gui"] floating enable
for_window [class="Godot"] floating enable
for_window [class="Hamster"] floating enable
for_window [class="Skype"] floating enable
for_window [class="(?i)gpick"] floating enable
for_window [class="VirtualBox"] floating enable

# Window Colors
#							border  bg		text    indicator
client.focused				$yellow $yellow $bgd1 $bgd0
client.focused_inactive 	$fgd1 $fgd1 $fgl0 $bgd0
client.unfocused			$bgd0 $bgd0 $fgl0 $bgd0
client.urgent				$fgd1 $red $bgl1 $red

# Bar
bar {
	font pango: Iosevka, FontAwesome 9
    status_command i3blocks -c $DOTFILES/i3wm/i3bar/i3blocks
	strip_workspace_numbers yes
    colors {
        separator $fgl0
        background $bgd0
        statusline $fgl1
#							border  bg		text
        focused_workspace	$cyan $blue $bgd1
        active_workspace	$fgd1 $fgd1 $bgl1
        inactive_workspace	$bgd0 $bgd0 $fgl0
        urgent_workspace	$red $red $bgl1
	}
}

# Specialized code #1: MPD control
set $mpd_control MPD:   (S),   (P),   (H),   (L),   (R),   (-),   (=)
bindsym $mod+m mode "$mpd_control"
mode "$mpd_control" {
    bindsym s exec mpc stop
    bindsym p exec mpc toggle
    bindsym l exec mpc next
    bindsym h exec mpc prev
    bindsym r exec mpc single
    bindsym equal exec mpc volume +3
    bindsym minus exec mpc volume -3
    bindsym XF86AudioMute exec ponymix toggle && pkill -RTMIN+1 i3blocks
    bindsym XF86AudioLowerVolume exec mpc volume -3
    bindsym XF86AudioRaiseVolume exec mpc volume +3

    bindsym Control+bracketleft mode "default"
    bindsym Escape mode "default"
	bindsym Return mode "default"
}

# Specialized code #2: System halter
set $mode_system  (T)erminate session     (S)uspend
set $mode_system_terminate  (S)hutdown     (R)eboot     (X) logout
bindsym $mod+Pause mode "$mode_system"
mode "$mode_system" {
    bindsym t mode "$mode_system_terminate"
    bindsym s exec systemctl suspend, mode "default"
    bindsym Return mode "default"
    bindsym Control+bracketleft mode "default"
    bindsym Escape mode "default"
}
mode "$mode_system_terminate" {
   bindsym s exec systemctl poweroff -i, mode "default"
   bindsym r exec systemctl reboot, mode "default"
   bindsym x exec i3-msg exit, mode "default"
   bindsym Return mode "default"
   bindsym Control+bracketleft mode "default"
   bindsym Escape mode "default"
}

# Specialized code #3: Gaps resize
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"
mode "$mode_gaps" {
        bindsym o mode "$mode_gaps_outer"
        bindsym i mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Control+bracketleft mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Control+bracketleft mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Control+bracketleft mode "default"
        bindsym Escape mode "default"
}

